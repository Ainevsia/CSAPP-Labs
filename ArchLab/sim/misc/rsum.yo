                            | # Execution begins at address 0 
0x000:                      | 	.pos 0
0x000: 30f40002000000000000 | 	irmovq stack, %rsp  	# Set up stack pointer
0x00a: 807800000000000000   | 	call main		# Execute main program
0x013: 00                   | 	halt			# Terminate program 
                            | 
                            | # Sample linked list
                            | # typedef struct ELE {
                            | #     long val;
                            | #     struct ELE *next;
                            | # } *list_ptr;
0x018:                      | 	.align 8
0x018:                      | ele1:
0x018: 0a00000000000000     | 	.quad 0x00a
0x020: 2800000000000000     | 	.quad ele2
0x028:                      | ele2:
0x028: b000000000000000     | 	.quad 0x0b0
0x030: 3800000000000000     | 	.quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     | 	.quad 0xc00
0x040: 4800000000000000     | 	.quad ele4
0x048:                      | ele4:
0x048: 00a0000000000000     | 	.quad 0x00a000
0x050: 5800000000000000     | 	.quad ele5
0x058:                      | ele5:
0x058: 00000b0000000000     | 	.quad 0x0b0000
0x060: 6800000000000000     | 	.quad ele6
0x068:                      | ele6:
0x068: 0000c00000000000     | 	.quad 0xc00000
0x070: 0000000000000000     | 	.quad 0
                            | 
0x078:                      | main:	
0x078: 30f71800000000000000 | 	irmovq ele1,%rdi
0x082: 808c00000000000000   | 	call rsum_list		# rsum_list(ele1)
0x08b: 90                   | 	ret
                            | 
                            | # long rsum_list(list_ptr ls)
                            | # ls in %rdi
0x08c:                      | rsum_list:	
0x08c: 6277                 | 	andq %rdi,%rdi	     # test ls
0x08e: 749a00000000000000   | 	jne	Recur        	 # Goto Recursive
0x097: 6300                 | 	xorq %rax,%rax
0x099: 90                   | 	ret
0x09a:                      | Recur:
                            | 	# long val = ls->val;
0x09a: 50a70000000000000000 | 	mrmovq (%rdi),%r10
                            | 	# long rest = rsum_list(ls->next); 
0x0a4: 50770800000000000000 | 	mrmovq 8(%rdi),%rdi
0x0ae: a0af                 | 	pushq %r10
0x0b0: 808c00000000000000   | 	call rsum_list
0x0b9: b0af                 | 	popq %r10
                            | 	# return val + rest;
0x0bb: 60a0                 | 	addq %r10,%rax
0x0bd: 90                   | 	ret
                            | 
                            | # Stack starts here and grows to lower addresses
0x200:                      | 	.pos 0x200
0x200:                      | stack:

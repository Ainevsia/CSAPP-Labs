# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
	call main		# Execute main program
	halt			# Terminate program 

    .align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

main:	
	irmovq src,%rdi
    irmovq dest,%rsi
    irmovq $3,%rdx
	call copy_block		# copy_block(src,dest,3)
	ret

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:	
    # long result = 0;
	xorq %rax,%rax
    irmovq $8,%r11
    irmovq $1,%r12
    andq %rdx,%rdx
loop:
    je return
    # long val = *src++;
    mrmovq (%rdi),%r10
    addq %r11,%rdi
    # *dest++ = val;
    rmmovq %r10,(%rsi)
    addq %r11,%rsi
    # result ^= val;
    xorq %r10,%rax
    # len--;
    subq %r12,%rdx
    jmp loop
return:
    ret

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
